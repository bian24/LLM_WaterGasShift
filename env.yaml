---
all_components:
  - gold
  - ruthenium
  - rhodium
  - iridium
  - copper
  - palladium
  - IWI
  - WI
  - CI
  - SI
  - SGP
  - CP
  - HDP
  - UGC
  - SCT
  - FSP
  - ME
  - DP
  - Calc T (oC)
  - Calc T. (hr)
  - aluminum oxide
  - magnesium oxide
  - cerium oxide
  - titanium dioxide
  - zeolite
  - manganese oxide
  - yttrium oxide
  - zirconium dioxide
  - hydroxyapatite
  - activated carbon composite
  - terbium oxide
  - hafnium dioxide
  - lanthanum oxide
  - cobalt oxide
  - thorium dioxide
  - silicon dioxide
  - iron(III) oxide
  - samarium oxide
  - gadolinium oxide
  - ytterbium oxide
  - calcium oxide
  - nickel oxide
  - chromium(III) oxide
  - holmium oxide
  - neodymium oxide
  - thulium oxide
  - erbium oxide
  - yttria-stabilized zirconia
  - lithium
  - cerium
  - cobalt
  - magnesium
  - iron
  - manganese
  - zirconium
  - potassium
  - nickel
  - calcium
  - cesium
  - vanadium
  - rubidium
  - yttrium
  - sodium 
  - lanthanum
  - gadolinium
  - ytterbium
  - zinc
  - rhenium
  - strontium
  - Temperature (C)
  - H2 vol.%
  - O2 vol.%
  - CO vol.%
  - H2O vol.%
  - CO2 vol.%
  - CH4 vol.%
  - TOS (min)
  - W/F (mg.min/ml)
  - CO_Conversion

system_prompt: |
  Extract the features related to metals, promoters, oxides, and process conditions from the following sentence:
  "I want to design a catalyst using 3 grams of aluminium with a chlorination impregnation promoter of 5g, calcined at 450 degrees Celsius for 4 hours, and the reaction temperature set to 350 degrees Celsius."
  Classify them into a clean Python dictionary as follows:

  - Metals: {"metal_name": weight_as_float}
  - Promoters: {"promoter_name": weight_as_float}
  - Oxides: {"oxide_name": weight_as_float}
  - Process Conditions: {"condition_name": value_as_float}

  In which the followings are considered as Metals
  Platinum, Gold, Ruthenium, Rhodium, Iridium, Copper, Palladium, Nickel, Osmium, Rhenium, Alumunium oxide

  In which the followings are considered as Promoters
  Lithium, Cerium, Cobalt, Iron, Manganese, Zirconium
  Return only the dictionary in string type variable, without any extra characters, newline characters, or explanations.
